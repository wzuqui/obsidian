"use strict";(self.webpackChunkobsidian=self.webpackChunkobsidian||[]).push([[1788],{2602:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"diferenca-entre-processamento-em-lote-ou-granular","metadata":{"permalink":"/obsidian/blog/diferenca-entre-processamento-em-lote-ou-granular","source":"@site/blog/2023-09-29-diferenca-entre-processamento-em-lote-ou-granular.md","title":"Diferen\xe7a entre processamento em lote ou granular","description":"Algumas diferen\xe7as encontradas com o time de desenvolvimento entre processamento em lote ou granular","date":"2023-09-29T00:00:00.000Z","formattedDate":"29 de setembro de 2023","tags":[{"label":"banco-de-dados","permalink":"/obsidian/blog/tags/banco-de-dados"},{"label":"change-track","permalink":"/obsidian/blog/tags/change-track"},{"label":"concorrencia","permalink":"/obsidian/blog/tags/concorrencia"},{"label":"cursor","permalink":"/obsidian/blog/tags/cursor"},{"label":"diferenca-entre-processamento-em-lote-ou-granular","permalink":"/obsidian/blog/tags/diferenca-entre-processamento-em-lote-ou-granular"},{"label":"efcore","permalink":"/obsidian/blog/tags/efcore"},{"label":"granular","permalink":"/obsidian/blog/tags/granular"},{"label":"lock lote","permalink":"/obsidian/blog/tags/lock-lote"},{"label":"select","permalink":"/obsidian/blog/tags/select"},{"label":"selects","permalink":"/obsidian/blog/tags/selects"},{"label":"sql","permalink":"/obsidian/blog/tags/sql"},{"label":"transactions","permalink":"/obsidian/blog/tags/transactions"},{"label":"worker","permalink":"/obsidian/blog/tags/worker"},{"label":"workers","permalink":"/obsidian/blog/tags/workers"}],"readingTime":1.905,"hasTruncateMarker":false,"authors":[{"name":"Willian Luis Zuqui","title":"Willian Luis Zuqui","url":"https://github.com/zuqui","image_url":"https://github.com/wzuqui.png","imageURL":"https://github.com/wzuqui.png"}],"frontMatter":{"title":"Diferen\xe7a entre processamento em lote ou granular","description":"Algumas diferen\xe7as encontradas com o time de desenvolvimento entre processamento em lote ou granular","slug":"diferenca-entre-processamento-em-lote-ou-granular","authors":[{"name":"Willian Luis Zuqui","title":"Willian Luis Zuqui","url":"https://github.com/zuqui","image_url":"https://github.com/wzuqui.png","imageURL":"https://github.com/wzuqui.png"}],"tags":["banco-de-dados","change-track","concorrencia","cursor","diferenca-entre-processamento-em-lote-ou-granular","efcore","granular","lock lote","select","selects","sql","transactions","worker","workers"],"hide_table_of_contents":false}},"content":"## Motiva\xe7\xe3o\\n\\nA motiva\xe7\xe3o deste post \xe9 compartilhar algumas diferen\xe7as encontradas com o time de desenvolvimento entre processamento em lote ou granular. Com o objetivo de ajudar a entender qual a melhor forma de processar os dados.\\n\\nCom o passar do tempo desenvolvendo aplica\xe7\xf5es `workers` que s\xe3o aplicativos que processam dados em segundo plano, percebi que existem duas formas de processar os dados, em lote ou granular, com eles suas vantagens e desvantagens que ser\xe3o abordadas neste post.\\n\\n## Processamento em lote\\n\\nO processamento em lote \xe9 quando voc\xea processa um conjunto de dados de uma vez s\xf3, por exemplo, voc\xea tem uma lista de 1000 usu\xe1rios e precisa enviar um e-mail para cada um deles, voc\xea pode processar todos de uma vez s\xf3, ou seja, em lote.\\n\\n## Processamento granular\\n\\nO processamento granular \xe9 quando voc\xea processa um conjunto de dados de forma granular, ou seja, um por um, por exemplo, voc\xea tem uma lista de 1000 usu\xe1rios e precisa enviar um e-mail para cada um deles, voc\xea pode processar um por um, ou seja, de forma granular.\\n\\n## Tabela comparativa\\n\\n| Processamento granular                                                            | Processamento em lote                                                                | Vantagem |\\n| --------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------ | :------: |\\n| Muito `selects` executados no banco de dados                                      | Menos selects executados no banco                                                    |   Lote   |\\n| `SQL` com menos par\xe2metros                                                        | `SQL` com acima de 2.100 par\xe2metros causam erros de execu\xe7\xe3o                         | Granular |\\n| Caso aconte\xe7a um erro, voc\xea pode identificar em qual registro parou sua aplica\xe7\xe3o | Perde a `transactions` inteira do lote                                               | Granular |\\n| Salva o `cursor`/`posi\xe7\xe3o` na qual o registro est\xe1 seja ele com erro ou sucesso   | O `cursor` n\xe3o consegue identificar o real problema, e salva o cursor somente no fim | Granular |\\n| Conseguimos identificar o tempo de processamento de cada registro                 | Conseguimos apenas a m\xe9dia de tempo para cada registro                               | Granular |\\n| Menos `concorr\xeancia` e `change track` no `efcore`                                 | Mais `concorr\xeancia` gerando mais `lock` no banco                                     | Granular |\\n\\n> Placar final: Granular 6 x 1 com vantagem para o processamento granular\\n\\n## Conclus\xe3o\\n\\nConforme for passando o tempo, e novas experi\xeancias forem surgindo, vou atualizando este post com novas informa\xe7\xf5es. Mas por enquanto, a melhor forma de processar os dados \xe9 de forma granular."}]}')}}]);